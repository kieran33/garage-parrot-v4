{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ki\\xE9ran\\\\Desktop\\\\garageParrotV3-main\\\\garageParrotV3-main\\\\Frontend\\\\src\\\\pages\\\\SeConnecter.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Navigation from '../components/Navigation';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeConnecter = () => {\n  _s();\n  /*\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [listeEmployes, setListeEmployes] = useState('');\n   const navigate = useNavigate();\n   const etatConnexion = localStorage.getItem('etat connexion');\n  const admin = localStorage.getItem('compte admin');\n   useEffect(() => {\n      const getEmployes = async () => {\n          try {\n              const response = await axios.get('http://localhost:3001/api/get', {\n                  headers: {\n                      'Content-Type': 'application/json',\n                  },\n              });\n              const employes = JSON.stringify(response.data)\n              setListeEmployes(Array.from(new Set(JSON.parse(employes))));\n              console.log('Succès:', response.data);\n          } catch (error) {\n              console.error('Erreur:', error.response ? error.response.data : error.message);\n          }\n      }\n      getEmployes();\n  }, []);\n   const tableauEmployes = Array.from(\n      new Set(listeEmployes)\n  );\n   const connexion = (e) => {\n      //e.preventDefault();\n      tableauEmployes.map(employe => {\n          if ((employe.email === email && employe.password === password)) {\n              localStorage.setItem('etat connexion', true);\n              console.log('Bravo vous êtes connecté', email, ' ', password);\n              navigate(\"/\");\n              location.reload();\n          } else if (email === \"vincent@vincent\" && password === \"parrot\") {\n              localStorage.setItem('etat connexion', true);\n              localStorage.setItem('compte admin', true);\n              navigate(\"/\");\n              location.reload();\n          } else {\n              console.log('Compte employé introuvable');\n          }\n      })\n  };\n   const deconnexion = (e) => {\n      e.preventDefault();\n      setEmail('');\n      setPassword('');\n      localStorage.removeItem('etat connexion');\n      if (localStorage.getItem('compte admin')) {\n          localStorage.removeItem('compte admin');\n      }\n      navigate(\"/\");\n      location.reload();\n  }*/\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const connexion = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3001/login', {\n        email: email,\n        password: password\n      });\n      // Vous pouvez ajuster cette partie en fonction de la réponse de votre serveur\n      if (response.data.success) {\n        navigate(\"/\");\n      } else {\n        alert('Identifiants incorrects.');\n      }\n    } catch (error) {\n      console.error('Erreur de connexion:', error);\n      alert('Erreur lors de la tentative de connexion.');\n    }\n  };\n\n  // La fonction deconnexion n'est peut-être pas nécessaire si vous gérez les sessions sur le serveur\n\n  console.log(email, password);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Espace professionnel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conteneurConnexion\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"formulaireConnexion\",\n        onSubmit: connexion,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"votre email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"votre mot de passe\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boutonConnexion\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Se connecter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(SeConnecter, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = SeConnecter;\n{/*<div>\n                <Navigation />\n                <h1>Espace professionnel</h1>\n                <div className=\"conteneurConnexion\">\n                    <form className=\"formulaireConnexion\">\n                        {admin === \"true\" ?\n                            <>\n                                <legend>Vous êtes connecté en tant qu'admin</legend>\n                                <button onClick={deconnexion}>\n                                    Se déconnecter\n                                </button>\n                            </>\n                            :\n                            etatConnexion === \"true\" && admin !== \"true\" ?\n                                <>\n                                    <legend>Vous êtes connecté en tant qu'employé</legend>\n                                    <button onClick={deconnexion}>\n                                        Se déconnecter\n                                    </button>\n                                </>\n                                :\n                                <div>\n                                    <input\n                                        type=\"email\"\n                                        name=\"email\"\n                                        id=\"email\"\n                                        placeholder=\"votre email\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                        required\n                                    />\n                                    <label htmlFor=\"email\"></label>\n                                     <input\n                                        type=\"password\"\n                                        name=\"password\"\n                                        id=\"password\"\n                                        placeholder=\"votre mot de passe\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                        required\n                                    />\n                                    <label htmlFor=\"password\"></label>\n                                     <div className=\"boutonConnexion\">\n                                        <button onClick={connexion}>\n                                            Se connecter\n                                        </button>\n                                    </div>\n                                </div>\n                        }\n                    </form>\n                </div>\n                <Footer />\n                    </div >*/}\nexport default SeConnecter;\nvar _c;\n$RefreshReg$(_c, \"SeConnecter\");","map":{"version":3,"names":["React","Navigation","useState","useEffect","useNavigate","Footer","axios","jsxDEV","_jsxDEV","SeConnecter","_s","email","setEmail","password","setPassword","navigate","connexion","e","preventDefault","response","post","data","success","alert","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","name","id","placeholder","value","onChange","target","required","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Kiéran/Desktop/garageParrotV3-main/garageParrotV3-main/Frontend/src/pages/SeConnecter.js"],"sourcesContent":["import React from 'react';\nimport Navigation from '../components/Navigation';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport axios from 'axios';\n\nconst SeConnecter = () => {\n\n    /*\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [listeEmployes, setListeEmployes] = useState('');\n\n    const navigate = useNavigate();\n\n    const etatConnexion = localStorage.getItem('etat connexion');\n    const admin = localStorage.getItem('compte admin');\n\n    useEffect(() => {\n        const getEmployes = async () => {\n            try {\n                const response = await axios.get('http://localhost:3001/api/get', {\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                });\n                const employes = JSON.stringify(response.data)\n                setListeEmployes(Array.from(new Set(JSON.parse(employes))));\n                console.log('Succès:', response.data);\n            } catch (error) {\n                console.error('Erreur:', error.response ? error.response.data : error.message);\n            }\n        }\n        getEmployes();\n    }, []);\n\n    const tableauEmployes = Array.from(\n        new Set(listeEmployes)\n    );\n\n    const connexion = (e) => {\n        //e.preventDefault();\n        tableauEmployes.map(employe => {\n            if ((employe.email === email && employe.password === password)) {\n                localStorage.setItem('etat connexion', true);\n                console.log('Bravo vous êtes connecté', email, ' ', password);\n                navigate(\"/\");\n                location.reload();\n            } else if (email === \"vincent@vincent\" && password === \"parrot\") {\n                localStorage.setItem('etat connexion', true);\n                localStorage.setItem('compte admin', true);\n                navigate(\"/\");\n                location.reload();\n            } else {\n                console.log('Compte employé introuvable');\n            }\n        })\n    };\n\n    const deconnexion = (e) => {\n        e.preventDefault();\n        setEmail('');\n        setPassword('');\n        localStorage.removeItem('etat connexion');\n        if (localStorage.getItem('compte admin')) {\n            localStorage.removeItem('compte admin');\n        }\n        navigate(\"/\");\n        location.reload();\n    }*/\n\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    const connexion = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('http://localhost:3001/login', {\n                email: email,\n                password: password\n            });\n            // Vous pouvez ajuster cette partie en fonction de la réponse de votre serveur\n            if (response.data.success) {\n                navigate(\"/\");\n            } else {\n                alert('Identifiants incorrects.');\n            }\n        } catch (error) {\n            console.error('Erreur de connexion:', error);\n            alert('Erreur lors de la tentative de connexion.');\n        }\n    };\n\n    // La fonction deconnexion n'est peut-être pas nécessaire si vous gérez les sessions sur le serveur\n\n    console.log(email, password)\n\n    return (\n\n        <div>\n            <Navigation />\n            <h1>Espace professionnel</h1>\n            <div className=\"conteneurConnexion\">\n                <form className=\"formulaireConnexion\" onSubmit={connexion}>\n                    <div>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            id=\"email\"\n                            placeholder=\"votre email\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            required\n                        />\n                        <label htmlFor=\"email\"></label>\n\n                        <input\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"password\"\n                            placeholder=\"votre mot de passe\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            required\n                        />\n                        <label htmlFor=\"password\"></label>\n\n                        <div className=\"boutonConnexion\">\n                            <button type=\"submit\">\n                                Se connecter\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\n\n\n\n{/*<div>\n                <Navigation />\n                <h1>Espace professionnel</h1>\n                <div className=\"conteneurConnexion\">\n                    <form className=\"formulaireConnexion\">\n                        {admin === \"true\" ?\n                            <>\n                                <legend>Vous êtes connecté en tant qu'admin</legend>\n                                <button onClick={deconnexion}>\n                                    Se déconnecter\n                                </button>\n                            </>\n                            :\n                            etatConnexion === \"true\" && admin !== \"true\" ?\n                                <>\n                                    <legend>Vous êtes connecté en tant qu'employé</legend>\n                                    <button onClick={deconnexion}>\n                                        Se déconnecter\n                                    </button>\n                                </>\n                                :\n                                <div>\n                                    <input\n                                        type=\"email\"\n                                        name=\"email\"\n                                        id=\"email\"\n                                        placeholder=\"votre email\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                        required\n                                    />\n                                    <label htmlFor=\"email\"></label>\n\n                                    <input\n                                        type=\"password\"\n                                        name=\"password\"\n                                        id=\"password\"\n                                        placeholder=\"votre mot de passe\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                        required\n                                    />\n                                    <label htmlFor=\"password\"></label>\n\n                                    <div className=\"boutonConnexion\">\n                                        <button onClick={connexion}>\n                                            Se connecter\n                                        </button>\n                                    </div>\n                                </div>\n                        }\n                    </form>\n                </div>\n                <Footer />\n                    </div >*/}\n\nexport default SeConnecter;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}